name: "Terraform Pipeline"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
env:
  VERSION: 1.0.0.${{ github.run_id }}

jobs:
  pull-request-checks:
    name: "Pull Request Checks"
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.event_name == 'pull_request'
    environment: dev
    env:
      ENVIRONMENT: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dynamically set RUN_DATE environment variable
        run: echo "RUN_DATE=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Workspace
        id: workspace
        run: echo "TF_WORKSPACE=${{ env.ENVIRONMENT }}" >> $GITHUB_ENV

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Lint / Static Analysis
        id: lint
        run: echo "Run some analysis here"

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Variables
        id: variables
        run: |
          echo 'deployment_environment="${{ env.ENVIRONMENT }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'deployment_version="${{ env.VERSION }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'deployment_date="${{ env.RUN_DATE }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'resource_group_name_prefix="nwong-demo-one-"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo '' >> ${{ env.ENVIRONMENT }}.auto.tfvars

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Run Functional Tests
        run: echo "Run some tests against the infra here"

  deploy-to-dev:
    name: "Deploy to dev"
    runs-on: ubuntu-latest
    environment: dev
    if: github.ref == 'refs/heads/main' && contains(toJson(github.event.commits), 'Initial commit') == false && github.event_name != 'pull_request'
    env:
      ENVIRONMENT: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dynamically set RUN_DATE environment variable
        run: echo "RUN_DATE=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Workspace
        id: workspace
        run: echo "TF_WORKSPACE=${{ env.ENVIRONMENT }}" >> $GITHUB_ENV

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Variables
        id: variables
        run: |
          echo 'deployment_environment="${{ env.ENVIRONMENT }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'deployment_version="${{ env.VERSION }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'deployment_date="${{ env.RUN_DATE }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'resource_group_name_prefix="nwong-demo-one-"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'primary_cluster_size=4' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'secondary_cluster_size=2' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo '' >> ${{ env.ENVIRONMENT }}.auto.tfvars

      - name: Terraform Apply
        run: terraform apply -auto-approve

  deploy-to-test:
    name: "Deploy to test"
    runs-on: ubuntu-latest
    environment: test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: deploy-to-dev
    env:
      ENVIRONMENT: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dynamically set RUN_DATE environment variable
        run: echo "RUN_DATE=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Workspace
        id: workspace
        run: echo "TF_WORKSPACE=${{ env.ENVIRONMENT }}" >> $GITHUB_ENV

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Variables
        id: variables
        run: |
          echo 'deployment_environment="${{ env.ENVIRONMENT }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'deployment_version="${{ env.VERSION }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'deployment_date="${{ env.RUN_DATE }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'resource_group_name_prefix="nwong-demo-one-"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'primary_cluster_size=6' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'secondary_cluster_size=4' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo '' >> ${{ env.ENVIRONMENT }}.auto.tfvars

      - name: Terraform Apply
        run: terraform apply -auto-approve

  deploy-to-prod:
    name: "Deploy to prod"
    runs-on: ubuntu-latest
    environment: prod
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: deploy-to-test
    env:
      ENVIRONMENT: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dynamically set RUN_DATE environment variable
        run: echo "RUN_DATE=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Workspace
        id: workspace
        run: echo "TF_WORKSPACE=${{ env.ENVIRONMENT }}" >> $GITHUB_ENV

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Variables
        id: variables
        run: |
          echo 'deployment_environment="${{ env.ENVIRONMENT }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'deployment_version="${{ env.VERSION }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'deployment_date="${{ env.RUN_DATE }}"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'resource_group_name_prefix="nwong-demo-one-"' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'primary_cluster_size=12' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo 'secondary_cluster_size=8' >> ${{ env.ENVIRONMENT }}.auto.tfvars
          echo '' >> ${{ env.ENVIRONMENT }}.auto.tfvars

      - name: Terraform Apply
        run: terraform apply